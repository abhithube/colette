[package]
name = "colette-ui"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

[dependencies]
axum = { workspace = true, optional = true }
colette-api = { workspace = true, optional = true }
colette-backup = { workspace = true, optional = true }
colette-config = { workspace = true, optional = true }
colette-core = { workspace = true }
colette-migrations = { workspace = true, optional = true }
colette-plugins = { workspace = true, optional = true }
colette-scraper = { workspace = true, optional = true }
colette-session = { workspace = true, optional = true }
colette-sql = { workspace = true, optional = true }
colette-tasks = { workspace = true, optional = true }
console_error_panic_hook = { version = "0.1", default-features = false }
http.workspace = true
leptix_primitives = { version = "0.2", default-features = false }
leptos = { version = "0.6", default-features = false, features = ["nightly"] }
leptos_axum = { version = "0.6", optional = true }
leptos_meta = { version = "0.6", default-features = false, features = [
  "nightly",
] }
leptos_router = { version = "0.6", default-features = false, features = [
  "nightly",
] }
sea-orm.workspace = true
tailwind_fuse = { version = "0.3", default-features = false, features = [
  "variant",
] }
thiserror.workspace = true
tokio = { workspace = true, optional = true }
tower = { workspace = true, optional = true }
tower-http = { workspace = true, optional = true }
tower-sessions = { workspace = true, optional = true }
tracing = { workspace = true, optional = true }
wasm-bindgen = { version = "=0.2.92", default-features = false }

[features]
default = ["ssr"]
hydrate = ["leptos/hydrate", "leptos_meta/hydrate", "leptos_router/hydrate"]
ssr = [
  "dep:axum",
  "dep:colette-api",
  "dep:colette-backup",
  "dep:colette-config",
  "dep:colette-migrations",
  "dep:colette-plugins",
  "dep:colette-scraper",
  "dep:colette-session",
  "dep:colette-sql",
  "dep:colette-tasks",
  "dep:leptos_axum",
  "dep:tokio",
  "dep:tower",
  "dep:tower-http",
  "dep:tower-sessions",
  "dep:tracing",
  "leptos/ssr",
  "leptos_meta/ssr",
  "leptix_primitives/ssr",
  "leptos_router/ssr",
]

[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "colette-ui"

# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"

# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"

# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/output.css"

# Assets source dir. All files found here will be copied and synchronized to site-root.
# The assets-dir cannot have a sub directory with the same name/path as site-pkg-dir.
#
# Optional. Env: LEPTOS_ASSETS_DIR.
assets-dir = "public"

# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-addr = "127.0.0.1:3000"

# The port to use for automatic reload monitoring
reload-port = 3001

#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"

# The environment Leptos will run in, usually either "DEV" or "PROD"
env = "DEV"

# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false

# The profile to use for the lib target when compiling for release
#
# Optional. Defaults to "release".
lib-profile-release = "wasm-release"
