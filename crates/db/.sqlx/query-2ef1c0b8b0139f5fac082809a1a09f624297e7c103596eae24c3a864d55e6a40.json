{
  "db_name": "PostgreSQL",
  "query": "WITH\n  pft AS (\n    SELECT\n      t.id,\n      t.title,\n      pft.profile_feed_id\n    FROM\n      profile_feed_tag AS pft\n      INNER JOIN tag AS t ON t.id = pft.tag_id\n    ORDER BY\n      t.title ASC\n  )\nSELECT\n  pf.id,\n  f.link,\n  pf.title,\n  f.title AS original_title,\n  f.url,\n  coalesce(\n    json_agg(\n      DISTINCT jsonb_build_object(\n        'id',\n        pft.id,\n        'title',\n        pft.title,\n        'bookmark_count',\n        NULL::int8,\n        'feed_count',\n        NULL::int8\n      )\n    ) FILTER (\n      WHERE\n        pft.id IS NOT NULL\n    ),\n    '[]'\n  ) AS \"tags!: Json<Vec<Tag>>\",\n  count(pfe.id) AS unread_count\nFROM\n  profile_feed AS pf\n  INNER JOIN feed AS f ON f.id = pf.feed_id\n  LEFT JOIN pft ON pft.profile_feed_id = pf.id\n  LEFT JOIN profile_feed_entry AS pfe ON pfe.profile_feed_id = pf.id\n  AND pfe.has_read = FALSE\nWHERE\n  pf.profile_id = $1\n  AND (\n    $2::UUID [] IS NULL\n    OR pf.id IN (\n      SELECT DISTINCT\n        profile_feed_id\n      FROM\n        profile_feed_tag\n      WHERE\n        tag_id = ANY ($2)\n    )\n  )\nGROUP BY\n  pf.id,\n  f.link,\n  f.title,\n  f.url\nORDER BY\n  pf.title ASC,\n  f.title ASC;",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "link",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "original_title",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "url",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "tags!: Json<Vec<Tag>>",
        "type_info": "Json"
      },
      {
        "ordinal": 6,
        "name": "unread_count",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "UuidArray"
      ]
    },
    "nullable": [
      false,
      false,
      true,
      false,
      true,
      null,
      null
    ]
  },
  "hash": "2ef1c0b8b0139f5fac082809a1a09f624297e7c103596eae24c3a864d55e6a40"
}
