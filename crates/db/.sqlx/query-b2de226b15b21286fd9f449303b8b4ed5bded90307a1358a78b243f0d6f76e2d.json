{
  "db_name": "PostgreSQL",
  "query": "WITH\n  pb AS (\n    SELECT\n      pb.id,\n      b.link,\n      b.title,\n      b.thumbnail_url,\n      b.published_at,\n      b.author,\n      pb.profile_id\n    FROM\n      profile_bookmarks AS pb\n      INNER JOIN bookmarks AS b ON b.id = pb.bookmark_id\n    WHERE\n      pb.id = $1\n      AND pb.profile_id = $2\n  ),\n  t_insert AS (\n    INSERT INTO\n      tags (title, profile_id)\n    SELECT\n      unnest($3::TEXT[]),\n      pb.profile_id\n    FROM\n      pb\n    ON CONFLICT (profile_id, title) DO nothing\n    RETURNING\n      id,\n      title\n  ),\n  t AS (\n    SELECT\n      id,\n      title\n    FROM\n      t_insert\n    UNION ALL\n    SELECT\n      t.id,\n      t.title\n    FROM\n      tags t,\n      pb\n    WHERE\n      t.title = ANY ($3::TEXT[])\n      AND t.profile_id = pb.profile_id\n  ),\n  pbt_insert AS (\n    INSERT INTO\n      profile_bookmark_tags (profile_bookmark_id, tag_id, profile_id)\n    SELECT\n      pb.id,\n      t.id,\n      pb.profile_id\n    FROM\n      pb,\n      t\n    ON CONFLICT DO nothing\n    RETURNING\n      profile_bookmark_id,\n      tag_id\n  ),\n  pbt_delete AS (\n    DELETE FROM profile_bookmark_tags USING pb,\n    t\n    WHERE\n      profile_bookmark_id = pb.id\n      AND tag_id NOT IN (\n        SELECT\n          t.id\n        FROM\n          t\n      )\n  ),\n  pbt AS (\n    SELECT\n      profile_bookmark_id,\n      tag_id\n    FROM\n      pbt_insert\n    UNION ALL\n    SELECT\n      pbt.profile_bookmark_id,\n      pbt.tag_id\n    FROM\n      profile_bookmark_tags pbt,\n      pb\n    WHERE\n      pbt.profile_bookmark_id = pb.id\n  )\nSELECT\n  pb.id,\n  pb.link,\n  pb.title,\n  pb.thumbnail_url,\n  pb.published_at,\n  pb.author,\n  coalesce(\n    json_agg(\n      DISTINCT jsonb_build_object(\n        'id',\n        t.id,\n        'title',\n        t.title,\n        'bookmark_count',\n        NULL::int8,\n        'feed_count',\n        NULL::int8\n      )\n    ) FILTER (\n      WHERE\n        t.id IS NOT NULL\n    ),\n    '[]'\n  ) AS \"tags!: Json<Vec<Tag>>\"\nFROM\n  pb\n  LEFT JOIN pbt ON pbt.profile_bookmark_id = pb.id\n  LEFT JOIN t ON pbt.tag_id = t.id\nGROUP BY\n  pb.id,\n  pb.link,\n  pb.title,\n  pb.thumbnail_url,\n  pb.published_at,\n  pb.author;\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "link",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "thumbnail_url",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "published_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 5,
        "name": "author",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "tags!: Json<Vec<Tag>>",
        "type_info": "Json"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "TextArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      true,
      true,
      null
    ]
  },
  "hash": "b2de226b15b21286fd9f449303b8b4ed5bded90307a1358a78b243f0d6f76e2d"
}
