{
  "db_name": "PostgreSQL",
  "query": "WITH\n  b AS (\n    SELECT\n      id,\n      link,\n      title,\n      thumbnail_url,\n      published_at,\n      author,\n      profile_id\n    FROM\n      bookmarks\n    WHERE\n      id = $1\n      AND profile_id = $2\n  ),\n  t AS (\n    SELECT\n      t.id,\n      t.title\n    FROM\n      tags t,\n      b\n    WHERE\n      t.id = ANY ($3::UUID [])\n      AND t.profile_id = b.profile_id\n  ),\n  bt_insert AS (\n    INSERT INTO\n      bookmark_tags (bookmark_id, tag_id, profile_id)\n    SELECT\n      b.id,\n      t.id,\n      b.profile_id\n    FROM\n      b,\n      t\n    ON CONFLICT DO nothing\n    RETURNING\n      bookmark_id,\n      tag_id\n  ),\n  bt_delete AS (\n    DELETE FROM bookmark_tags USING b\n    WHERE\n      bookmark_id = b.id\n      AND tag_id != ALL ($3::UUID [])\n  ),\n  bt AS (\n    SELECT\n      bookmark_id,\n      tag_id\n    FROM\n      bt_insert\n    UNION ALL\n    SELECT\n      bt.bookmark_id,\n      bt.tag_id\n    FROM\n      bookmark_tags bt,\n      b\n    WHERE\n      bt.bookmark_id = b.id\n  )\nSELECT\n  b.id,\n  b.link,\n  b.title,\n  b.thumbnail_url,\n  b.published_at,\n  b.author,\n  coalesce(\n    array_agg(ROW (t.id, t.title)) FILTER (\n      WHERE\n        t.id IS NOT NULL\n    ),\n    ARRAY[]::record[]\n  ) AS \"tags!: Vec<Tag>\"\nFROM\n  b\n  LEFT JOIN bt ON bt.bookmark_id = b.id\n  LEFT JOIN t ON bt.tag_id = t.id\nGROUP BY\n  b.id,\n  b.link,\n  b.title,\n  b.thumbnail_url,\n  b.published_at,\n  b.author;\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "link",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "thumbnail_url",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "published_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 5,
        "name": "author",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "tags!: Vec<Tag>",
        "type_info": "RecordArray"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "UuidArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      true,
      true,
      null
    ]
  },
  "hash": "279b2854e223889a9f4be9f63d10070e21e1686eab6028a23c9a6aba0b4ae2d7"
}
