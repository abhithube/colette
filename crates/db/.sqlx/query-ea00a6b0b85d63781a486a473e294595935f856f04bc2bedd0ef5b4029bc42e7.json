{
  "db_name": "PostgreSQL",
  "query": "SELECT\n  pf.id,\n  f.link,\n  f.title,\n  f.url,\n  coalesce(\n    array_agg(\n      DISTINCT ROW (t.id, t.title, NULL::int8, NULL::int8)\n    ) FILTER (\n      WHERE\n        t.id IS NOT NULL\n    ),\n    ARRAY[]::record[]\n  ) AS \"tags!: Vec<Tag>\",\n  count(pfe.id) AS unread_count\nFROM\n  profile_feeds AS pf\n  INNER JOIN feeds AS f ON f.id = pf.feed_id\n  LEFT JOIN profile_feed_tags AS pft ON pft.profile_feed_id = pf.id\n  LEFT JOIN tags AS t ON pft.tag_id = t.id\n  LEFT JOIN profile_feed_entries AS pfe ON pfe.profile_feed_id = pf.id\n  AND pfe.has_read = FALSE\nWHERE\n  pf.profile_id = $1\n  AND (\n    $2::UUID [] IS NULL\n    OR pf.id IN (\n      SELECT DISTINCT\n        profile_feed_id\n      FROM\n        profile_feed_tags\n      WHERE\n        tag_id = ANY ($2)\n    )\n  )\nGROUP BY\n  pf.id,\n  f.link,\n  f.title,\n  f.url\nORDER BY\n  f.title ASC;",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "link",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "url",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "tags!: Vec<Tag>",
        "type_info": "RecordArray"
      },
      {
        "ordinal": 5,
        "name": "unread_count",
        "type_info": "Int8"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "UuidArray"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      null,
      null
    ]
  },
  "hash": "ea00a6b0b85d63781a486a473e294595935f856f04bc2bedd0ef5b4029bc42e7"
}
