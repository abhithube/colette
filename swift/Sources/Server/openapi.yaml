openapi: 3.1.0
info:
  title: Colette
  version: "0.1.0"
servers:
  - url: http://localhost:8080/api/v1
paths:
  /auth/login:
    post:
      operationId: login
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Login"
      responses:
        200:
          description: Logged in user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        401:
          $ref: "#/components/responses/Unauthorized"
        422:
          $ref: "#/components/responses/UnprocessableContent"
  /auth/register:
    post:
      operationId: register
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/Register"
      responses:
        200:
          description: Logged in user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        409:
          $ref: "#/components/responses/Conflict"
        422:
          $ref: "#/components/responses/UnprocessableContent"
components:
  responses:
    Conflict:
      description: Resource already exists
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    Unauthorized:
      description: User not authenticated
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
    UnprocessableContent:
      description: Validation failed
      content:
        application/json:
          schema:
            $ref: "#/components/schemas/Error"
  schemas:
    Error:
      type: object
      required:
        - message
      properties:
        message:
          type: string
    Login:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
    Register:
      type: object
      required:
        - email
        - password
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          minLength: 1
    User:
      type: object
      required:
        - id
        - email
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
        email:
          type: string
          format: email
        createdAt:
          type: string
          format: date-time
        updatedAt:
          type: string
          format: date-time
