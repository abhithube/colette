[package]
name = "colette-server"
version = "0.1.0"
edition = "2021"

[dependencies]
async-trait.workspace = true
axum = { version = "0.7.5", features = ["macros"] }
axum-embed = "0.1.0"
axum-valid = { version = "0.19.0", features = ["422", "into_json"] }
chrono.workspace = true
colette-config.workspace = true
colette-core.workspace = true
colette-password.workspace = true
colette-postgres = { workspace = true, optional = true }
colette-plugins.workspace = true
colette-scraper.workspace = true
colette-sqlite = { workspace = true, optional = true }
colette-tasks.workspace = true
cron = "0.12.1"
rust-embed = { version = "8.5.0", features = ["interpolate-folder-path"] }
serde.workspace = true
thiserror.workspace = true
tokio.workspace = true
tokio-cron-scheduler = "0.10.2"
tower-http = { version = "0.5.2", features = ["cors"] }
tower-sessions = "0.12.2"
tower-sessions-redis-store = { version = "0.13.0", optional = true }
tower-sessions-sqlx-store = { version = "0.12.0" }
utoipa = { version = "5.0.0-alpha.0", features = [
  "chrono",
  "preserve_order",
  "preserve_path_order",
  "uuid",
] }
utoipa-scalar = { version = "0.2.0-alpha.0", features = ["axum"] }
uuid = { workspace = true, features = ["serde"] }
validator = { version = "0.18.1", features = ["derive"] }

[features]
default = ["postgres", "redis"]
postgres = ["colette-postgres", "tower-sessions-sqlx-store/postgres"]
redis = ["tower-sessions-redis-store"]
sqlite = ["colette-sqlite", "tower-sessions-sqlx-store/sqlite"]
