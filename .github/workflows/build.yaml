name: Release Binaries

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ${{ matrix.os }}

    permissions:
      contents: write

    env:
      app_name: colette-server

    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: x86_64-unknown-linux-musl
          - os: ubuntu-latest
            target: aarch64-unknown-linux-musl
          - os: macos-latest
            target: x86_64-apple-darwin
          - os: macos-latest
            target: aarch64-apple-darwin
          - os: windows-latest
            target: x86_64-pc-windows-msvc

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 24
          cache: npm
          cache-dependency-path: package-lock.json

      - name: Build web
        run: |
          npm ci
          npm run build

      - name: Install Rust
        uses: dtolnay/rust-toolchain@nightly
        with:
          targets: ${{ matrix.target }}

      - name: Install musl
        if: contains(matrix.target, 'musl')
        run: |
          sudo apt-get update
          sudo apt-get install -y musl-tools

      - name: Setup aarch64 cross-compilation
        if: matrix.target == 'aarch64-unknown-linux-musl'
        run: |
          sudo apt-get install -y gcc-aarch64-linux-gnu
          echo "CC_aarch64_unknown_linux_musl=aarch64-linux-gnu-gcc" >> $GITHUB_ENV
          echo "CARGO_TARGET_AARCH64_UNKNOWN_LINUX_MUSL_LINKER=aarch64-linux-gnu-gcc" >> $GITHUB_ENV

      - name: Cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            target/
          key: ${{ runner.os }}-cargo-${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}

      - name: Build
        run: cargo build --release --target ${{ matrix.target }} -p ${{ env.app_name }}

      - name: Package Unix
        if: matrix.os != 'windows-latest'
        run: |
          name="${{ env.app_name }}-${{ matrix.target }}"
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ env.app_name }} dist/
          cd dist
          tar czf ${name}.tar.gz ${{ env.app_name }}

      - name: Package Windows
        if: matrix.os == 'windows-latest'
        shell: bash
        run: |
          name="${{ env.app_name }}-${{ matrix.target }}"
          mkdir -p dist
          cp target/${{ matrix.target }}/release/${{ env.app_name }}.exe dist/
          cd dist
          7z a ${name}.zip ${{ env.app_name }}.exe

      - name: Release
        uses: softprops/action-gh-release@v2
        if: github.ref_type == 'tag'
        with:
          files: dist/*
