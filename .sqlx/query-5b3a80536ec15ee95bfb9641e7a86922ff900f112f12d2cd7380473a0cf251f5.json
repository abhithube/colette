{
  "db_name": "PostgreSQL",
  "query": "SELECT\n  s.id,\n  s.title,\n  s.description,\n  s.feed_id,\n  f.source_url AS \"source_url: DbUrl\",\n  f.link AS \"link: DbUrl\",\n  f.title AS feed_title,\n  f.description AS feed_description,\n  f.refresh_interval_min,\n  f.status AS \"status: DbFeedStatus\",\n  f.refreshed_at,\n  f.is_custom,\n  coalesce(uc.unread_count, 0) AS unread_count,\n  coalesce(t.tags, NULL::JSONB) AS \"tags: Json<Vec<Tag>>\",\n  s.user_id,\n  s.created_at,\n  s.updated_at\nFROM\n  subscriptions s\n  INNER JOIN feeds f ON f.id = s.feed_id\n  LEFT JOIN (\n    SELECT\n      s_inner.id AS subscription_id,\n      count(fe.id) AS unread_count\n    FROM\n      subscriptions s_inner\n      INNER JOIN feed_entries fe ON s_inner.feed_id = fe.feed_id\n    WHERE\n      $7\n      AND NOT EXISTS (\n        SELECT\n          1\n        FROM\n          subscription_entries se\n        WHERE\n          se.subscription_id = s_inner.id\n          AND se.feed_entry_id = fe.id\n      )\n    GROUP BY\n      s_inner.id\n  ) AS uc ON s.id = uc.subscription_id\n  LEFT JOIN (\n    SELECT\n      st.subscription_id,\n      jsonb_agg(\n        jsonb_build_object(\n          'id',\n          t.id,\n          'title',\n          t.title,\n          'user_id',\n          t.user_id,\n          'created_at',\n          t.created_at,\n          'updated_at',\n          t.updated_at\n        )\n        ORDER BY\n          t.title ASC\n      ) AS tags\n    FROM\n      subscription_tags st\n      INNER JOIN tags t ON t.id = st.tag_id\n    WHERE\n      $8\n    GROUP BY\n      st.subscription_id\n  ) AS t ON s.id = t.subscription_id\nWHERE\n  (\n    $1::UUID IS NULL\n    OR s.id = $1\n  )\n  AND (\n    $2::UUID IS NULL\n    OR s.user_id = $2\n  )\n  AND (\n    $3::UUID[] IS NULL\n    OR EXISTS (\n      SELECT\n        1\n      FROM\n        subscription_tags st\n      WHERE\n        st.subscription_id = s.id\n        AND st.tag_id = ANY ($3)\n    )\n  )\n  AND (\n    (\n      $4::TEXT IS NULL\n      OR $5::UUID IS NULL\n    )\n    OR (s.title, s.id) > ($4, $5)\n  )\nORDER BY\n  s.title ASC,\n  s.id ASC\nLIMIT\n  $6\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "title",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "description",
        "type_info": "Text"
      },
      {
        "ordinal": 3,
        "name": "feed_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 4,
        "name": "source_url: DbUrl",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "link: DbUrl",
        "type_info": "Text"
      },
      {
        "ordinal": 6,
        "name": "feed_title",
        "type_info": "Text"
      },
      {
        "ordinal": 7,
        "name": "feed_description",
        "type_info": "Text"
      },
      {
        "ordinal": 8,
        "name": "refresh_interval_min",
        "type_info": "Int4"
      },
      {
        "ordinal": 9,
        "name": "status: DbFeedStatus",
        "type_info": "Text"
      },
      {
        "ordinal": 10,
        "name": "refreshed_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 11,
        "name": "is_custom",
        "type_info": "Bool"
      },
      {
        "ordinal": 12,
        "name": "unread_count",
        "type_info": "Int8"
      },
      {
        "ordinal": 13,
        "name": "tags: Json<Vec<Tag>>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 14,
        "name": "user_id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 15,
        "name": "created_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 16,
        "name": "updated_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Uuid",
        "UuidArray",
        "Text",
        "Uuid",
        "Int8",
        "Bool",
        "Bool"
      ]
    },
    "nullable": [
      false,
      false,
      true,
      false,
      false,
      false,
      false,
      true,
      false,
      false,
      true,
      false,
      null,
      null,
      false,
      false,
      false
    ]
  },
  "hash": "5b3a80536ec15ee95bfb9641e7a86922ff900f112f12d2cd7380473a0cf251f5"
}
