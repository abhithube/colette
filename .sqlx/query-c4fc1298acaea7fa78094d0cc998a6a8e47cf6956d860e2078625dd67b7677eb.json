{
  "db_name": "PostgreSQL",
  "query": "SELECT\n  u.id,\n  u.email,\n  u.verified,\n  u.display_name,\n  u.image_url AS \"image_url: DbUrl\",\n  coalesce(\n    jsonb_agg(\n      jsonb_build_object(\n        'code',\n        oc.code,\n        'expires_at',\n        oc.expires_at,\n        'used_at',\n        oc.used_at,\n        'created_at',\n        oc.created_at,\n        'updated_at',\n        oc.updated_at\n      )\n      ORDER BY\n        oc.created_at ASC\n    ) FILTER (\n      WHERE\n        oc.code IS NOT NULL\n    ),\n    '[]'::JSONB\n  ) AS \"otp_codes!: Json<Vec<OtpCodeRow>>\",\n  coalesce(\n    jsonb_agg(\n      jsonb_build_object(\n        'provider',\n        sa.provider,\n        'sub',\n        sa.sub,\n        'created_at',\n        sa.created_at,\n        'updated_at',\n        sa.updated_at\n      )\n      ORDER BY\n        sa.provider ASC,\n        sa.sub ASC\n    ) FILTER (\n      WHERE\n        sa.sub IS NOT NULL\n    ),\n    '[]'::JSONB\n  ) AS \"social_accounts!: Json<Vec<SocialAccountRow>>\",\n  coalesce(\n    jsonb_agg(\n      jsonb_build_object(\n        'id',\n        pat.id,\n        'lookup_hash',\n        pat.lookup_hash,\n        'verification_hash',\n        pat.verification_hash,\n        'title',\n        pat.title,\n        'preview',\n        pat.preview,\n        'created_at',\n        pat.created_at,\n        'updated_at',\n        pat.updated_at\n      )\n      ORDER BY\n        pat.created_at ASC\n    ) FILTER (\n      WHERE\n        pat.id IS NOT NULL\n    ),\n    '[]'::JSONB\n  ) AS \"personal_access_tokens!: Json<Vec<PersonalAccessTokenRow>>\",\n  u.created_at,\n  u.updated_at\nFROM\n  users u\n  LEFT JOIN otp_codes oc ON oc.user_id = u.id\n  LEFT JOIN social_accounts sa ON sa.user_id = u.id\n  LEFT JOIN personal_access_tokens pat ON pat.user_id = u.id\nWHERE\n  (\n    $1::UUID IS NULL\n    OR u.id = $1\n  )\n  AND (\n    $2::TEXT IS NULL\n    OR u.email = $2\n  )\n  AND (\n    (\n      $3::TEXT IS NULL\n      AND $4::TEXT IS NULL\n    )\n    OR u.id IN (\n      SELECT\n        user_id\n      FROM\n        social_accounts\n      WHERE\n        provider = $3\n        AND sub = $4\n    )\n  )\nGROUP BY\n  u.id\n",
  "describe": {
    "columns": [
      {
        "ordinal": 0,
        "name": "id",
        "type_info": "Uuid"
      },
      {
        "ordinal": 1,
        "name": "email",
        "type_info": "Text"
      },
      {
        "ordinal": 2,
        "name": "verified",
        "type_info": "Bool"
      },
      {
        "ordinal": 3,
        "name": "display_name",
        "type_info": "Text"
      },
      {
        "ordinal": 4,
        "name": "image_url: DbUrl",
        "type_info": "Text"
      },
      {
        "ordinal": 5,
        "name": "otp_codes!: Json<Vec<OtpCodeRow>>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 6,
        "name": "social_accounts!: Json<Vec<SocialAccountRow>>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 7,
        "name": "personal_access_tokens!: Json<Vec<PersonalAccessTokenRow>>",
        "type_info": "Jsonb"
      },
      {
        "ordinal": 8,
        "name": "created_at",
        "type_info": "Timestamptz"
      },
      {
        "ordinal": 9,
        "name": "updated_at",
        "type_info": "Timestamptz"
      }
    ],
    "parameters": {
      "Left": [
        "Uuid",
        "Text",
        "Text",
        "Text"
      ]
    },
    "nullable": [
      false,
      false,
      false,
      true,
      true,
      null,
      null,
      null,
      false,
      false
    ]
  },
  "hash": "c4fc1298acaea7fa78094d0cc998a6a8e47cf6956d860e2078625dd67b7677eb"
}
