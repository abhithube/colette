{
  "db_name": "PostgreSQL",
  "query": "WITH\n  f AS (\n    SELECT\n      id,\n      source_url\n    FROM\n      feeds\n    WHERE\n      source_url = ANY ($2::TEXT[])\n  ),\n  input_subscriptions AS (\n    SELECT\n      *,\n      $1::UUID AS user_id\n    FROM\n      unnest(\n        $2::TEXT[],\n        $3::TEXT[],\n        $4::TEXT[],\n        $5::TIMESTAMPTZ[],\n        $6::TIMESTAMPTZ[]\n      ) AS t (\n        source_url,\n        title,\n        description,\n        created_at,\n        updated_at\n      )\n  ),\n  input_bookmarks AS (\n    SELECT\n      *,\n      $1::UUID AS user_id\n    FROM\n      unnest(\n        $7::TEXT[],\n        $8::TEXT[],\n        $9::TEXT[],\n        $10::TIMESTAMPTZ[],\n        $11::TEXT[],\n        $12::TEXT[],\n        $13::TIMESTAMPTZ[],\n        $14::TIMESTAMPTZ[]\n      ) AS t (\n        link,\n        title,\n        thumbnail_url,\n        published_at,\n        author,\n        archived_path,\n        created_at,\n        updated_at\n      )\n  ),\n  input_tags AS (\n    SELECT\n      *,\n      $1::UUID AS user_id\n    FROM\n      unnest(\n        $15::TEXT[],\n        $16::TIMESTAMPTZ[],\n        $17::TIMESTAMPTZ[]\n      ) AS t (title, created_at, updated_at)\n  ),\n  input_st_relationships AS (\n    SELECT\n      *\n    FROM\n      unnest($18::TEXT[], $19::TEXT[]) AS t (feed_source_url, tag_title)\n  ),\n  input_bt_relationships AS (\n    SELECT\n      *\n    FROM\n      unnest($20::TEXT[], $21::TEXT[]) AS t (bookmark_link, tag_title)\n  ),\n  s AS (\n    INSERT INTO\n      subscriptions (title, feed_id, user_id)\n    SELECT\n      s.title,\n      f.id,\n      s.user_id\n    FROM\n      f\n      JOIN input_subscriptions s ON s.source_url = f.source_url\n    ON CONFLICT (user_id, feed_id) DO UPDATE\n    SET\n      title = EXCLUDED.title\n    RETURNING\n      id,\n      feed_id\n  ),\n  fe AS (\n    SELECT\n      fe.id,\n      fe.feed_id\n    FROM\n      feed_entries fe\n      JOIN f ON f.id = fe.feed_id\n  ),\n  orphaned_subscriptions AS (\n    DELETE FROM subscriptions old USING s\n    WHERE\n      old.user_id = $1\n      AND NOT old.feed_id = s.feed_id\n  ),\n  b AS (\n    INSERT INTO\n      bookmarks (\n        link,\n        title,\n        thumbnail_url,\n        published_at,\n        author,\n        archived_path,\n        user_id,\n        created_at,\n        updated_at\n      )\n    SELECT\n      link,\n      title,\n      thumbnail_url,\n      published_at,\n      author,\n      archived_path,\n      user_id,\n      created_at,\n      updated_at\n    FROM\n      input_bookmarks\n    ON CONFLICT (user_id, link) DO UPDATE\n    SET\n      title = EXCLUDED.title,\n      thumbnail_url = EXCLUDED.thumbnail_url,\n      published_at = EXCLUDED.published_at,\n      author = EXCLUDED.author,\n      archived_path = EXCLUDED.archived_path,\n      created_at = EXCLUDED.created_at,\n      updated_at = EXCLUDED.updated_at\n    RETURNING\n      id,\n      link\n  ),\n  orphaned_bookmarks AS (\n    DELETE FROM bookmarks b USING input_bookmarks i\n    WHERE\n      b.user_id = $1\n      AND NOT b.link = i.link\n  ),\n  t AS (\n    INSERT INTO\n      tags (title, user_id, created_at, updated_at)\n    SELECT\n      title,\n      user_id,\n      created_at,\n      updated_at\n    FROM\n      input_tags\n    ON CONFLICT (user_id, title) DO UPDATE\n    SET\n      created_at = EXCLUDED.created_at,\n      updated_at = EXCLUDED.updated_at\n    RETURNING\n      id,\n      title\n  ),\n  orphaned_tags AS (\n    DELETE FROM tags t USING input_tags i\n    WHERE\n      t.user_id = $1\n      AND NOT t.title = i.title\n  ),\n  st AS (\n    INSERT INTO\n      subscription_tags (subscription_id, tag_id)\n    SELECT\n      s.id,\n      t.id\n    FROM\n      input_st_relationships i\n      JOIN f ON f.source_url = i.feed_source_url\n      JOIN s ON s.feed_id = f.id\n      JOIN t ON t.title = i.tag_title\n    ON CONFLICT (subscription_id, tag_id) DO NOTHING\n  )\nINSERT INTO\n  bookmark_tags (bookmark_id, tag_id)\nSELECT\n  b.id,\n  t.id\nFROM\n  input_bt_relationships i\n  JOIN b ON b.link = i.bookmark_link\n  JOIN t ON t.title = i.tag_title\nON CONFLICT (bookmark_id, tag_id) DO NOTHING\n",
  "describe": {
    "columns": [],
    "parameters": {
      "Left": [
        "Uuid",
        "TextArray",
        "TextArray",
        "TextArray",
        "TimestamptzArray",
        "TimestamptzArray",
        "TextArray",
        "TextArray",
        "TextArray",
        "TimestamptzArray",
        "TextArray",
        "TextArray",
        "TimestamptzArray",
        "TimestamptzArray",
        "TextArray",
        "TimestamptzArray",
        "TimestamptzArray",
        "TextArray",
        "TextArray",
        "TextArray",
        "TextArray"
      ]
    },
    "nullable": []
  },
  "hash": "87f1b084b1ae4b54555372cbe4e535654f74e591b9e9014f39e038ecf7f21242"
}
